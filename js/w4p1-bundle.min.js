!function(){"use strict";function t(t,e={},n=document){if(!t)return;let s=new CustomEvent(t,{bubbles:!0,cancelable:!0,detail:e});return n.dispatchEvent(s)}
/*!
	 * Create an immutable clone of data (an array, object, map, set, etc.)
	 * (c) 2021 Chris Ferdinandi, MIT License, https://gomakethings.com
	 * @param  {*} obj The data object to copy
	 * @return {*}     The clone of the array or object
	 */function e(t){function n(n){for(let s in t)Object.prototype.hasOwnProperty.call(t,s)&&(n[s]=e(t[s]))}let s=Object.prototype.toString.call(t).slice(8,-1).toLowerCase();return"object"===s?function(){let t={};return n(t),t}():"array"===s?t.map((function(t){return e(t)})):"map"===s?function(){let n=new Map;for(let[s,i]of t)n.set(s,e(i));return n}():"set"===s?function(){let t=new Set;for(let n of set)t.add(e(n));return t}():"function"===s?function(){let e=t.bind(this);return n(e),e}():t}function n(e=[],n={},s=[]){Array.isArray(e)||(e=[e]);let i=Object.assign({days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],months:["January","February","March","April","May","June","July","August","September","October","November","December"]});Object.freeze(i);let a=new Date(...e);s=Array.isArray(s)&&s.length?s:[],console.log(s),Object.freeze(s),Object.defineProperties(this,{date:{value:a},_settings:{value:i},_history:{value:s}}),t("time:ready",{time:this})}n.prototype.getYear=function(){return this.date.getFullYear()},n.prototype.getMonth=function(){return this._settings.months[this.date.getMonth()]},n.prototype.getDay=function(){return this._settings.days[this.date.getDay()]},n.prototype.getDate=function(){return this.date.getDate()},n.prototype.getHours=function(){return this.date.getHours()},n.prototype.getMinutes=function(){return this.date.getMinutes()},n.prototype.getSeconds=function(){return this.date.getSeconds()},n.prototype.getLocaleString=function(t){return t=t||"en-US",this.date.toLocaleString(t)},n.prototype.addSeconds=function(s){if(s=parseFloat(s),isNaN(s))throw"Not a valid number.";let i=new Date(this.date);i.setSeconds(i.getSeconds()+s);let a=e(this._history);a.push(this);let o=new n(i,this._settings,a);return t("time:update",{time:o,type:"seconds",amount:s,instance:this})?o:new n(this.date,this._settings,this._history)},n.prototype.addMinutes=function(s){if(s=parseFloat(s),isNaN(s))throw"Not a valid number.";let i=new Date(this.date);i.setMinutes(i.getMinutes()+s);let a=e(this._history);a.push(this);let o=new n(i,this._settings,a);return t("time:update",{time:o,type:"minutes",amount:s,instance:this})?o:new n(this.date,this._settings,this._history)},n.prototype.addHours=function(s){if(s=parseFloat(s),isNaN(s))throw"Not a valid number.";let i=new Date(this.date);i.setHours(i.getHours()+s);let a=e(this._history);a.push(this);let o=new n(i,this._settings,a);return t("time:update",{time:o,type:"hours",amount:s,instance:this})?o:new n(this.date,this._settings,this._history)},n.prototype.addDays=function(s){if(s=parseFloat(s),isNaN(s))throw"Not a valid number.";let i=new Date(this.date);i.setDate(i.getDate()+s);let a=e(this._history);a.push(this);let o=new n(i,this._settings,a);return t("time:update",{time:o,type:"days",amount:s,instance:this})?o:new n(this.date,this._settings,this._history)},n.prototype.addMonths=function(s){if(s=parseFloat(s),isNaN(s))throw"Not a valid number.";let i=new Date(this.date);i.setMonth(i.getMonth()+s);let a=e(this._history);a.push(this);let o=new n(i,this._settings,a);return t("time:update",{time:o,type:"months",amount:s,instance:this})?o:new n(this.date,this._settings,this._history)},n.prototype.addYears=function(s){if(s=parseFloat(s),isNaN(s))throw"Not a valid number.";let i=new Date(this.date);i.setFullYear(i.getFullYear()+s);let a=e(this._history);a.push(this);let o=new n(i,this._settings,a);return t("time:update",{time:o,type:"years",amount:s,instance:this,instance:this})?o:new n(this.date,this._settings,this._history)};let s=document.getElementById("form"),i=document.getElementById("add-seconds"),a=document.getElementById("add-minutes"),o=document.getElementById("add-hours"),r=document.getElementById("add-days"),d=document.getElementById("add-months"),u=document.getElementById("add-years"),h=document.getElementById("history"),l=new n;s.reset(),h.innerHTML=`<p>Starting time: ${l.getLocaleString()}</p>`,s.addEventListener("submit",(function(t){t.preventDefault();let e=i.value,n=a.value,c=o.value,p=r.value,y=d.value,g=u.value,m=[];e&&(l=l.addSeconds(e),m.push(`${e} seconds added.`)),n&&(l=l.addMinutes(n),m.push(`${n} minutes added.`)),c&&(l=l.addHours(c),m.push(`${c} hours added.`)),p&&(l=l.addDays(p),m.push(`${p} days added.`)),y&&(l=l.addMonths(y),m.push(`${y} months added.`)),g&&(l=l.addYears(g),m.push(`${g} years added.`)),h.innerHTML+=`<p>${m.join(" ")} New time: ${l.getLocaleString()}</p>`,s.reset()}));let c=new n("October 31, 2021");console.log("Initial halloween constructor: ",c),document.addEventListener("time:update",(function(t){console.log("Instance date: "+t.detail.instance.date),t.detail.instance===c||t.detail.instance._history.includes(c)?(console.log("Instance is halloween or in halloween&rsquo;s history."),t.detail.time.date.getFullYear()>2021&&(console.log("Year is greater than 2021. Canceled."),t.preventDefault())):console.log("Instance is not halloween. Ignoring listener conditional and returning.")})),c.addDays(3).addMonths(1).addYears(1),console.log("Halloween date after methods: "+c.date)}();
